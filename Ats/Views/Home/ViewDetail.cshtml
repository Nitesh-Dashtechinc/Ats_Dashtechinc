@model Ats.Models.ViewModel.GridPreInterRegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="commentModal" class="modal fade" role="dialog" data-toggle="model">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Feedback</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" onclick="SaveFeedback(@Model.PersonalInfo.CandidateId)">
                    Save Changes
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/print.js"></script>
<style>
    label.error {
        color: red;
    }

    .field-validation-error {
        color: red;
    }

    .minwidth {
        min-width: 25%;
    }
</style>
@if (ViewBag.errormessage != null)
{
    <div class="alert alert-danger alert-dismissible">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <strong>Error! </strong>@ViewBag.errormessage
    </div>
}
@Html.HiddenFor(x => x.PersonalInfo.CandidateId, new { @id = "CandidateId" })
@*<div class="text-right"><a class="btn btn-primary" id="clikPrint" href="@Url.Action("CandidateDetailReport", "Home", new { id = Model.PersonalInfo.CandidateId })"  target="_blank"><i class="fa fa-print"></i>Print</a></div>*@
<div class="text-right">
    <a class="btn btn-primary" href="@Url.Action("ViewDetailReport", "Home",new { id = Model.PersonalInfo.CandidateId })" target="_blank"><i class="fa fa-print"></i> Print</a>
</div>
<div id="printableArea">
    <div style="text-align:center">
        <h2>
            <b>PRE-INTERVIEW DETAIL FORM</b>
        </h2>
    </div>
    <div class="card shadow">
        <div class="card-header">
            <h5 class="text-primary">
                Personal Information
                <button type="button" class="btn btn-primary float-right" data-toggle="modal" data-target="#commentModal" onclick="AddEditFeedback('@Model.PersonalInfo.CandidateId')">
                    <i class="fa fa-plus"></i> FeedBack
                </button>
            </h5>
        </div>
        <div class="card-body">
            <div class="form-row">
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">First Name</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6">
                            @Html.DisplayFor(Model => Model.PersonalInfo.FirstName, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">Last Name</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6">
                            @Html.DisplayFor(Model => Model.PersonalInfo.LastName, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label txt-nowrap">Mobile No 1</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6">
                            @Html.DisplayFor(Model => Model.PersonalInfo.MobileNo1, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label txt-nowrap">Mobile No 2</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6">
                            @if (Model.PersonalInfo.MobileNo2 != null)
                            {
                                @Html.DisplayFor(Model => Model.PersonalInfo.MobileNo2, new { @class = "control-label" })
                            }
                            else
                            {
                                @Html.Label("-", new { @class = "control-label" })
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">Email</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6 txt-nowrap">
                            @Html.DisplayFor(Model => Model.PersonalInfo.EmailId, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label txt-nowrap">Date of Birth</label>
                        </div>
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            @Html.DisplayFor(Model => Model.PersonalInfo.DateOfBirth, new { @class = "control-label  col-8 pcol-8" })
                        </div>
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6 text-left">
                            <label class="control-label" id="Age">Age</label> @Html.DisplayFor(M => Model.PersonalInfo.Age)
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label txt-nowrap">Marital Status</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6">
                            @Html.DisplayFor(Model => Model.PersonalInfo.MaritalStaus, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 setwidth">
                    <div class="form-group row">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6 ">
                            <label class="control-label txt-nowrap">No Of Children</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6 ">
                            @if (Model.PersonalInfo.NoOfChildren > 0)
                            {
                                @Html.DisplayFor(Model => Model.PersonalInfo.NoOfChildren, new { @class = "control-label", @placeholder = "Unmarried Enter 0" })
                            }
                            else
                            {
                                @Html.Label("-", new { @class = "control-label" })
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">Gender</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6">
                            @Html.DisplayFor(Model => Model.PersonalInfo.Gender, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6 ">
                            <label class="control-label">Vehicle</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6 ">
                            @Html.DisplayFor(Model => Model.PersonalInfo.Vehicle, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="table-responsive">
                    <table id="language" class="table table-language col-md-12">
                        <thead>
                            <tr>
                                <th>
                                    Language Known
                                </th>
                                <th>
                                    <label>Read</label>
                                </th>
                                <th>
                                    <label>Speak</label>
                                </th>
                                <th>
                                    <label>Write</label>
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var a in Model.Language)
                            {
                                <tr>
                                    <td>@a.LanguageType</td>
                                    <td>@a.Read</td>
                                    <td>@a.Speak</td>
                                    <td>@a.Write</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="card shadow mt-2 page-break">
        <div class="card-header">
            <h5 class="text-primary">Present Address Information</h5>
        </div>
        <div class="card-body">
            <div class="form-row">
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">Address</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6">
                            @Html.DisplayFor(Model => Model.PersonalInfo.AddressPresent, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">Pin code</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6">
                            @Html.DisplayFor(Model => Model.PersonalInfo.PincodePresent, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">State</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6">
                            @Html.DisplayFor(model => model.PersonalInfo.StatePresent, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-xs-6">
                            <label class="control-label">City</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-xs-6">
                            @Html.DisplayFor(model => model.PersonalInfo.CityPresent, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card shadow mt-2">
        <div class="card-header">
            <h5 class="text-primary">
                Permanent Address Information
            </h5>
        </div>
        <div class="card-body">
            <div class="form-row">
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">Address</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6">
                            @Html.DisplayFor(model => model.PersonalInfo.AddressPast, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">Pin code</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6">
                            @Html.DisplayFor(model => model.PersonalInfo.PinCodePast, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">State</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6">
                            @Html.DisplayFor(model => model.PersonalInfo.StatePast, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12  col-sm-6 col-xs-6">
                            <label class="control-label">City</label>
                        </div>
                        <div class="col-lg-8 col-md-12  col-sm-6 col-xs-6">
                            @Html.DisplayFor(model => Model.PersonalInfo.CityPast, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card shadow mt-2 mtop">
        <div class="card-header">
            <h5 class="text-primary">Applied for Position</h5>
        </div>
        <div class="card-body">
            <div class="form-row">
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">Department</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6 txt-right">
                            @Html.DisplayFor(model => model.PersonalInfo.AppliedForDepartment, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">Designation</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6 txt-right">
                            @Html.DisplayFor(model => model.PersonalInfo.AppliedForDesignation, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">Total Experience</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6 txt-right">
                            @Html.DisplayFor(model => model.PersonalInfo.TotalExperienceInYear, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">Salary Expectation</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6 txt-right txt-nowrap">
                            <div class="form-group">
                                @Html.DisplayFor(model => model.PersonalInfo.SalaryExpectation, new { @class = "control-label" })<label>/Month</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6 txt-left">
                            <label class="control-label">Joining Date</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6 txt-right">
                            @Html.DisplayFor(model => model.PersonalInfo.EarliestJoinDate, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 text-nowrap col-sm-6 col-xs-6 txt-left">
                            <label class="control-label">Comfortable Night Shift</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6 txt-right">
                            @if (Model.PersonalInfo.NightShift)
                            {
                                @Html.Label("Yes", new { @class = "control-label" })
                            }
                            else
                            {
                                @Html.Label("No", new { @class = "control-label" })
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6">
                            <label class="control-label">Job Source</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6 txt-right">
                            @Html.DisplayFor(Model => Model.PersonalInfo.JobSource, new { @class = "control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6 setwidth">
                    <div class="form-group row set-formrow">
                        <div class="col-lg-4 col-md-12 text-nowrap col-sm-6 col-xs-6">
                            <label class="control-label txt-nowrap">Reference In DashTech</label>
                        </div>
                        <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6 txt-right">
                            @if (Model.PersonalInfo.IsReference)
                            {
                                @Html.Label("Yes", new { @class = "control-label" })
                            }
                            else
                            {
                                @Html.Label("No", new { @class = "control-label" })
                            }
                        </div>
                    </div>
                </div>
            </div>
            @if (Model.PersonalInfo.IsReference)
            {
                <div class="form-row">
                    <div class="col-md-6 setwidth">
                        <div class="form-group row set-formrow">
                            <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6 txt-left">
                                <label class="control-label">Reference Name</label>
                            </div>
                            <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6">
                                @Html.DisplayFor(Model => Model.PersonalInfo.ReferenceName, new { @class = "control-label" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 setwidth">
                        <div class="form-group row set-formrow">
                            <div class="col-lg-4 col-md-12 text-nowrap col-sm-6 col-xs-6 txt-left">
                                <label class="control-label">Reference Designation</label>
                            </div>
                            <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6 txt-right txt-nowrap">
                                @Html.DisplayFor(Model => Model.PersonalInfo.ReferenceDesignation, new { @class = "control-label" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="col-md-6">
                        <div class="form-group row set-formrow">
                            <div class="col-lg-4 col-md-12 col-sm-6 col-xs-6 txt-left">
                                <label class="control-label">Reference Mobile No</label>
                            </div>
                            <div class="col-lg-8 col-md-12 col-sm-6 col-xs-6 txt-nowrap">
                                @Html.DisplayFor(Model => Model.PersonalInfo.ReferenceMobileNo, new { @class = "control-label" })
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="card shadow mt-2">
        <div class="card-header">
            <h4 class="text-primary">
                Previous Employment Details
            </h4>
        </div>
        <div class="card-body">
            <table id="previousEmploymentDetails" class="table table-striped responsive-table table-pre-employeement set-formrow">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>CompanyName</th>
                        <th>City</th>
                        <th>Designation</th>
                        <th>From</th>
                        <th>To</th>
                        <th>CTC/Month</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.PreviousEmploymentDetail != null)
                    {
                        var count = Model.PreviousEmploymentDetail.Count;
                        if (count > 0)
                        {
                            int sno = 0;
                            foreach (var item in Model.PreviousEmploymentDetail)
                            {
                                //var FromDate = Convert.ToDateTime(item.WorkFrom);
                                //var ToDate = Convert.ToDateTime(item.WorkTo);
                                //string frmDateLocalFormat = ((DateTime)FromDate).ToString("yyyy MMMM");
                                <tr>
                                    <td>@{ sno++; } @sno</td>
                                    <td>@item.CompanyName</td>
                                    <td>@item.City</td>
                                    <td>@item.Designation</td>
                                    <td>@item.WorkFrom</td>
                                    <td>@item.WorkTo</td>
                                    <td>@item.CtcMonth</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr class="grid-empty-text">
                                <td colspan="7"><lable class="control-label font-weight-bold">No Details Available</lable></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="card shadow mt-2">
        <div class="card-header">
            <h4 class="text-primary">
                Reference
            </h4>
        </div>
        <div class="card-body">
            <table id="reference" class="table table-striped responsive-table table-refernce set-formrow">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Person Name</th>
                        <th>Company Name</th>
                        <th>Designation</th>
                        <th>Contact Number</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Reference != null)
                    {
                        var count = Model.Reference.Count;
                        if (count > 0)
                        {

                            int sno1 = 0;
                            foreach (var item in Model.Reference)
                            {
                                <tr>
                                    <td>@{ sno1++;}@sno1</td>
                                    <td>@item.PersonName</td>
                                    <td>@item.CompanyName</td>
                                    <td>@item.Designation</td>
                                    <td>@item.ContactNo</td>
                                </tr>

                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5"><lable class="control-label font-weight-bold">No Details Available</lable></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="card shadow mt-2">
        <div class="card-header">
            <h4 class="text-primary">
                Educational Background
            </h4>
        </div>
        <div class="card-body">
            <table id="educationalBackground" class="table table-striped responsive-table table-educational-background set-formrow">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Board/University</th>
                        <th>Course/Degree</th>
                        <th>PassingYear</th>
                        <th>Grade/Percentage</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.EducationBackground != null)
                    {
                        var count = Model.Reference.Count;
                        if (count > 0)
                        {
                            int sno2 = 0;
                            foreach (var item in Model.EducationBackground)
                            {
                                <tr>
                                    <td>@{ sno2++; }@sno2</td>
                                    <td>@item.BoardUniversityName</td>
                                    <td>@item.CourseDegreeName</td>
                                    <td>@item.PassingYear</td>
                                    <td>@item.GradePercentage</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr class="grid-empty-text">
                                <td colspan="5"><lable class="control-label font-weight-bold">No Details Available</lable></td>
                            </tr>
                        }

                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="card shadow mt-2">
        <div class="card-header">
            <h5 class="text-primary">Other Information</h5>
        </div>
        <div class="card-body">
            <div class="form-row">
                <div class="col-lg-6 col-md-12 text-nowrap setwidth">
                    <label class="control-label">Other Certification And Achievement</label>
                </div>
                <div class="col-lg-6 col-md-12 setwidth">
                    @if (Model.PersonalInfo.OtherCertification != null)
                    {
                        @Html.DisplayFor(Model => Model.PersonalInfo.OtherCertification, new { @class = "control-label", rows = "2", cols = "100" })
                    }
                    else
                    {
                        <label class="control-label font-weight-bold">No Details Available</label>
                    }
                </div>
            </div>
            <div class="form-row">
                <div class="col-lg-6 col-md-12 text-nowrap setwidth">
                    <label class="control-label">Other Comments</label>
                </div>
                <div class="col-lg-6 col-md-12 setwidth">
                    @if (Model.PersonalInfo.OtherComments != null)
                    {
                        @Html.DisplayFor(Model => Model.PersonalInfo.OtherComments, new { @class = "control-label", rows = "2", cols = "100" })
                    }
                    else
                    {
                        <label class="control-label font-weight-bold">No Details Available</label>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/CustomScript/Register.js"></script>
    <script src="~/Content/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            //$('#clikPrint').click(function () {
            //    $("#printableArea").print();
            //});
            $('#Interviewdate').datepicker('setStartDate', 'today');
        });
        function AddEditFeedback(id) {
            $('#pre-loader').show();
            $('div.modal-body').empty();
            $.ajax({
                type: 'GET',
                url: '/Home/GetFeedback/' + id,
                data: { Id: id, },
                contentType: false,
                success: function (result) {
                    if (result == "") {
                        $('#pre-loader').hide();
                        $('#commentModal').modal('hide');
                        toastr.error("Something went rong");
                    } else {
                        $('div.modal-body').append(result);
                        $('#pre-loader').hide();
                    }
                },
                error: function (e) {
                    $('#commentModal').modal('hide');
                    toastr.error("Something went rong");
                    $('#pre-loader').hide();
                },
            });
        }
    </script>
}
